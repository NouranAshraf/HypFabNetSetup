#
# Copyright IBM Corp, SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#


################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # MultiOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererMSP

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/sqs.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &OrdererOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('OrdererMSP.admin', 'OrdererMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('OrdererMSP.admin', 'OrdererMSP.Client'')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints:
            - orderer.sqs.com:7050

    - &Sales
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: SalesMSP

        # ID to load the MSP definition as
        ID: SalesMSP

        MSPDir: crypto-config/peerOrganizations/Sales.sqs.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &SalesPolicies
            Readers:
                Type: Signature
                Rule: "OR('SalesMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('SalesMSP.admin', 'SalesMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('SalesMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('SalesMSP.admin', 'SalesMSP.Client'')"
            Admins:
                Type: Signature
                Rule: "OR('SalesMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.Sales.sqs.com
              Port: 7051

    - &Resourcing
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ResourcingMSP

        # ID to load the MSP definition as
        ID: ResourcingMSP

        MSPDir: crypto-config/peerOrganizations/Resourcing.sqs.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &ResourcingPolicies
            Readers:
                Type: Signature
                Rule: "OR('ResourcingMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('ResourcingMSP.admin', 'ResourcingMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('ResourcingMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('ResourcingMSP.admin', 'ResourcingMSP.Client'')"
            Admins:
                Type: Signature
                Rule: "OR('ResourcingMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.Resourcing.sqs.com
              Port: 9051
    
    - &EngagementManagement
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: EngagementManagementMSP

        # ID to load the MSP definition as
        ID: EngagementManagementMSP

        MSPDir: crypto-config/peerOrganizations/EngagementManagement.sqs.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &EngagementManagementPolicies
            Readers:
                Type: Signature
                Rule: "OR('EngagementManagementMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('EngagementManagementMSP.admin', 'EngagementManagementMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('EngagementManagementMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('EngagementManagementMSP.admin', 'EngagementManagementMSP.Client'')"
            Admins:
                Type: Signature
                Rule: "OR('EngagementManagementMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.EngagementManagement.sqs.com
              Port: 11051

    - &Client
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ClientMSP

        # ID to load the MSP definition as
        ID: ClientMSP

        MSPDir: crypto-config/peerOrganizations/Client.sqs.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &ClientPolicies
            Readers:
                Type: Signature
                Rule: "OR('ClientMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('ClientMSP.admin', 'ClientMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('ClientMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('ClientMSP.admin', 'ClientMSP.Client'')"
            Admins:
                Type: Signature
                Rule: "OR('ClientMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.Client.sqs.com
              Port: 13051
    
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Global capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.1 for Global is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause imcompatibilities.  Users
        # should leave this flag set to true.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # manipulated without concern for upgrading peers.  Set the value of the
    # capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Order is a catchall flag for behavior which has been
        # determined to be desired for all orderers running v1.0.x, but the
        # modification of which  would cause imcompatibilities.  Users should
        # leave this flag set to true.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # manipulated without concern for upgrading orderers.  Set the value of the
    # capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.1 for Application is a catchall flag for behavior which has been
        # determined to be desired for all peers running v1.0.x, but the
        # modification of which would cause incompatibilities.  Users should
        # leave this flag set to true.
        V2_0: true


################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: etcdraft

    Addresses:
        - orderer.sqs.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 500ms

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 98 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Max Channels is the maximum number of channels to allow on the ordering
    # network. When set to 0, this implies no maximum number of channels.
    MaxChannels: 0



    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

    # Capabilities describes the orderer level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *OrdererCapabilities


################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters.
#
################################################################################
Application: &ApplicationDefaults
    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    # Capabilities describes the application level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ApplicationCapabilities


################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities


################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:


    FirstChannel:
        Consortium: FirstConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Sales
                - *Client
                                                 
    SecChannel:
        Consortium: SecConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Sales
                - *EngagementManagement         

    ThirdChannel:
        Consortium: ThirdConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Sales
                - *Resourcing

    MainChannel:
        Consortium: MainConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Sales
                - *Resourcing
                - *EngagementManagement
            Capabilities:
                <<: *ApplicationCapabilities    
                
              
    GenesisBlock:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer.sqs.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer.sqs.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer.sqs.com/tls/server.crt
                - Host: orderer2.sqs.com
                  Port: 8050
                  ClientTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer2.sqs.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer2.sqs.com/tls/server.crt
                - Host: orderer3.sqs.com
                  Port: 9050
                  ClientTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer3.sqs.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer3.sqs.com/tls/server.crt
                - Host: orderer4.sqs.com
                  Port: 10050
                  ClientTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer4.sqs.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer4.sqs.com/tls/server.crt
                - Host: orderer5.sqs.com
                  Port: 11050
                  ClientTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer5.sqs.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/sqs.com/orderers/orderer5.sqs.com/tls/server.crt
            Addresses:
                - orderer.sqs.com:7050
                - orderer2.sqs.com:8050
                - orderer3.sqs.com:9050
                - orderer4.sqs.com:10050
                - orderer5.sqs.com:11050

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg

        Consortiums:
            FirstConsortium:
                Organizations:
                    - <<: *Sales
                      Policies:
                          <<: *SalesPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('SalesMSP.admin')"
                    - <<: *Client
                      Policies:
                          <<: *ClientPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('ClientMSP.admin')" 
            SecConsortium:
                Organizations:
                    - <<: *Sales
                      Policies:
                          <<: *SalesPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('SalesMSP.admin')"
                    - <<: *EngagementManagement
                      Policies:
                          <<: *EngagementManagementPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('EngagementManagementMSP.admin')"

                                                            
            ThirdConsortium:
                Organizations:
                    - <<: *Sales
                      Policies:
                          <<: *SalesPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('SalesMSP.admin')"
                    - <<: *Resourcing
                      Policies:
                          <<: *ResourcingPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('ResourcingMSP.admin')"                                                            
                    

            MainConsortium:
                Organizations:
                    - <<: *Sales
                      Policies:
                          <<: *SalesPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('SalesMSP.admin')"
                    - <<: *Resourcing
                      Policies:
                          <<: *ResourcingPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('ResourcingMSP.admin')"
                    
                    - <<: *EngagementManagement
                      Policies:
                          <<: *EngagementManagementPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('EngagementManagementMSP.admin')"

